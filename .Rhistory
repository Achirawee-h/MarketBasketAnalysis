library(dplyr)
library(ggplot2)
df <- read_excel("Online Retail.xlsx")
install.packages("readxl")
library(readxl)
df <- read_excel("Online Retail.xlsx")
df
dir.create("Data")
dir.create("Script")
dir.create("Output")
df <- read_excel("Data/Online Retail.xlsx")
df
df.size
df.size()
size(df)
library(dplyr)
size(df)
df
glimpse(df)
dtypes(df)
view(df)
view(df)
df
df[,:]
df[5,:]
df[5,]
df[1,]
df[,]
head(df)
class(df)
df %>% mutate(Description = as.factor(Description), Country = as.factor(Country))
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country))
df
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description))
df
df <- read_excel("Data/Online Retail.xlsx")
df
df
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description))
df
ggplot(df, aes(x=Quantity, colour = Country)) + geom_bar()
ggplot(df, aes(y=Quantity, colour = Country)) + geom_bar
ggplot(df, aes(y=Quantity, colour = Country)) + geom_bar()
ggplot(df, aes(x=Quantity, y=UnitPrice)) + geom_point()
ggplot(df, aes(x=Quantity, y=UnitPrice)) + geom_point()
ggplot(df, aes(x=Quantity, y=UnitPrice)) + geom_point()
ggplot(df, aes(x=Quantity, y=UnitPrice)) + geom_point()
ggplot(df, aes(x=Quantity, y=UnitPrice)) + geom_point()
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% filter(Quantity <= 0)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% filter(Quantity >= 0)
df
summary(df)
df
df <- read_excel("Data/Online Retail.xlsx")
head(df)
summary(df)
filter(Quantity >= 0)
df
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% filter(Quantity >= 0)
df
summary(df)
ggplot(df, aes(x=Quantity, y=UnitPrice)) + geom_point()
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description))
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description))
df
df
df
ggplot(df, aes(x=Quantity, y=UnitPrice)) + geom_point()
df
df
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country), InvoiceNo = as.numeric(InvoiceNo)) %>% mutate(Description = str_to_title(Description))
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country), InvoiceNo = as.numeric(InvoiceNo)) %>% mutate(Description = str_to_title(Description))
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description))
df
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description))
df
df[[3]]
df[[1,3]]
df[[2,3]]
df[[1:6,3]]
df[[3,3]]
df$Description
[1]
df$Description[1]
df
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% format(InvoiceDate, "%d-%m-%Y"))
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% format(InvoiceDate, "%d-%m-%Y")
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceDate = format(InvoiceDate, "%d-%m-%Y"), InvoiceTime = format(InvoiceDate, "%H:%M:%S"))
df
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceTime = format(InvoiceDate, "%H:%M:%S"), InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df
write.csv(df,"Data/Cleaned Online Retial.csv", quote = FALSE, row.names = FALSE)
df_query <- df %>% filter(InvoiceNo == 536381)
df_query
df_query <- df %>% filter(InvoiceNo == 536381 & Quantity == "Metal Sign")
df_query
df <- read_excel("Data/Online Retail.xlsx")
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceTime = format(InvoiceDate, "%H:%M:%S"), InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df
write.excel(df,"Data/Cleaned Online Retial.xlsx")
install.packages("writexl")
library(writexl)
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceTime = format(InvoiceDate, "%H:%M:%S"), InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df
write_elsx(df,"Data/Cleaned Online Retial.xlsx")
df
write.elsx(df,"Data/Cleaned Online Retial.xlsx")
df_query <- df %>% filter(InvoiceNo == 536381 & Quantity == "Metal Sign")
df_query
df_query <- df %>% filter(Quantity == "Metal Sign")
df_query
write_xlsx(df,"Data/Cleaned Online Retial.xlsx")
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% distinct() %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceTime = format(InvoiceDate, "%H:%M:%S"), InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df
write_xlsx(df,"Output/Data/Cleaned Online Retail.xlsx")
library(tidyverse)
library(ggplot2)
library(readxl)
library(writexl)
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
df
df <- df %>% mutate(Total Sales = Quantity*UnitPrice)
df <- df %>% mutate(Total = Quantity*UnitPrice)
df
df$Total
head(df)
df_country <- df %>% group_by(Country) %>% summarize(sum(Total))
df_country
df_country <- df %>% group_by(Country) %>% summarize(Revenue = sum(Total))
df_country
ggplot(df_country, aes(x=Country, y=Revenue)) + geom_bar()
ggplot(df_country, aes(x=Country, y=Revenue)) + geom_col()
ggplot(df_country, aes(x=Country, y=Revenue)) + geom_col()
ggplot(df_country, aes(x = Country, y = Revenue)) +
geom_col(fill = "steelblue") +
theme_minimal() +
labs(title = "Total Revenue by Country", x = "Country", y = "Revenue")
df_country <- df %>% group_by(Country) %>% summarize(Revenue = sum(Total)) %>% arrange(desc(Revenue))
ggplot(df_country, aes(x=Country, y=Revenue)) + geom_col()
ggplot(df_country, aes(x = Country, y = Revenue)) +
geom_col(fill = "steelblue") +
theme_minimal() +
labs(title = "Total Revenue by Country", x = "Country", y = "Revenue")
df_country
ggplot(head(df_country, 10), aes(x = Country, y = Revenue)) +
geom_col(fill = "steelblue") +
theme_minimal() +
labs(title = "Total Revenue by Country", x = "Country", y = "Revenue")
ggplot(df_country[1:10], aes(x=Country, y=Revenue)) + geom_col()
df_country <- df %>% group_by(Country) %>% summarize(Revenue = sum(Total)) %>% arrange(desc(Revenue)) %>% slice(1:10)
ggplot(df_country, aes(x = Country, y = Revenue)) +
geom_col(fill = "steelblue") +
theme_minimal() +
labs(title = "Total Revenue by Country", x = "Country", y = "Revenue")
df_country <- df %>% group_by(Country) %>% summarize(Revenue = sum(Total)) %>% arrange(desc(Revenue)) %>% slice(1:10)
ggplot(df_country, aes(x = Country, y = Revenue)) +
geom_col(fill = "steelblue") +
theme_minimal() +
labs(title = "Total Revenue by Country", x = "Country", y = "Revenue")
df_country
ggplot(df_country, aes(x = "", y = Revenue, fill = Country)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
theme_void() +  # remove background, axis
geom_text(aes(label = Label),
position = position_stack(vjust = 0.5)) +
labs(title = "Revenue by Country")
n_distinct(df$Country)
df
n_distinct(df$InvoiceNo)
n_distinct(df$StockCode)
n_distinct(df$Description)
n_distinct(df$CustomerID)
View(df)
library(tidyverse)
library(ggplot2)
library(readxl)
library(writexl)
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
head(df)
max_date <- max(InvoiceDate)
View(df)
max_date <- max(df$InvoiceDate)
max_date
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
df <- df %>% mutate(Total = Quantity*UnitPrice)
head(df)
max_date <- max(df$InvoiceDate)
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Recency = as.numeric(max_date - max(InvoiceDate)), Frequency = n_distinct(InvoiceNo), Monetary = sum(Total))
View(df)
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Recency = as.numeric(max_date - max(InvoiceDate)),
Frequency = n_distinct(InvoiceNo),
Monetary = sum(Total))
df %>% filter(CustomerID == 12346) %>% view()
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% filter(Quantity >= 0) %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceTime = format(InvoiceDate, "%H:%M:%S"), InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df
write_xlsx(df,"Output/Data/Cleaned Online Retail.xlsx")
summary(df)
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
df <- df %>% mutate(Total = Quantity*UnitPrice)
head(df)
summary(df)
max_date <- max(df$InvoiceDate)
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Recency = as.numeric(max_date - max(InvoiceDate)),
Frequency = n_distinct(InvoiceNo),
Monetary = sum(Total))
df %>% filter(CustomerID == 12346) %>% view()
max_date
as.numeric(max_date)
max_date
max(InvoiceDate)
df %>% filter(CustomerID == 12346) %>% view()
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
head(df)
n_distinct(df$Country) #There are 37 different countries
n_distinct(df$CustomerID) #There are 4372 customers among 37 different countries
#Top 10 Sales by Country
df <- df %>% mutate(Total = Quantity*UnitPrice)
df_country <- df %>% group_by(Country) %>% summarize(Revenue = sum(Total)) %>% arrange(desc(Revenue)) %>% slice(1:10)
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df %>% ggplot( aes(y=Quantity, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
df %>% ggplot( aes(y=Quantity, fill=name)) +
geom_boxplot() +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("A boxplot with jitter") +
xlab("")
df %>% ggplot( aes(y=Quantity, fill=name)) +
geom_boxplot() +
ggtitle("A boxplot with jitter") +
xlab("")
df %>% ggplot( aes(y=Quantity)) +
geom_boxplot() +
ggtitle("A boxplot with jitter") +
xlab("")
df <- df %>% drop_na() %>% filter(Quantity >= 0) %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceTime = format(InvoiceDate, "%H:%M:%S"), InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df %>% ggplot( aes(y=Quantity)) +
geom_boxplot() +
ggtitle("A boxplot with jitter") +
xlab("")
ggplot(df, aes(x=Quantity)) +
geom_boxplot() +
scale_x_continuous(trans='log1p')
ggplot(df, aes(x=Quantity)) +
geom_boxplot()
ggplot(df, aes(x=Quantity)) +
geom_boxplot() +
scale_x_continuous(trans='log1p')
ggplot(df, aes(y=Quantity)) +
geom_boxplot() +
scale_y_log10p()
ggplot(df, aes(y=Quantity)) +
geom_boxplot() +
scale_y_log10()
ggplot(df, aes(y=Quantity)) +
geom_boxplot() +
scale_y_continuous(trans='log1p')
ggplot(df, aes(y=Quantity)) +
geom_boxplot() +
scale_y_log10()
z <- (df$Quantity - mean(df$Quantity)) / sd(df$Quantity)
# กำหนด threshold (เช่น |z| < 3)
df_clean <- df[abs(z) < 3, ]
ggplot(df_clean, aes(y=Quantity)) +
geom_boxplot() +
scale_y_log10()
ggplot(df_clean, aes(y=Quantity)) +
geom_boxplot()
ggplot(df_clean, aes(y=Quantity)) +
geom_boxplot() +
scale_y_log10()
df <- read_excel("Data/Online Retail.xlsx")
head(df)
class(df)
summary(df)
df <- df %>% drop_na() %>% filter(Quantity >= 0) %>% mutate(Description = as.factor(Description), Country = as.factor(Country)) %>% mutate(Description = str_to_title(Description)) %>% mutate(InvoiceTime = format(InvoiceDate, "%H:%M:%S"), InvoiceDate = format(InvoiceDate, "%d-%m-%Y"))
df
write_xlsx(df,"Output/Data/Cleaned Online Retail.xlsx")
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
head(df)
n_distinct(df$Country) #There are 37 different countries
n_distinct(df$CustomerID) #There are 4372 customers among 37 different countries
#Top 10 Sales by Country
df <- df %>% mutate(Total = Quantity*UnitPrice)
df_country <- df %>% group_by(Country) %>% summarize(Revenue = sum(Total)) %>% arrange(desc(Revenue)) %>% slice(1:10)
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
df <- df %>% mutate(Total = Quantity*UnitPrice)
head(df)
summary(df)
# Defined the lastest Date
max_date <- max(df$InvoiceDate)
# Created RFM Table
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Recency = as.numeric(max_date - max(InvoiceDate)),
Frequency = n_distinct(InvoiceNo),
Monetary = sum(Total))
df %>% filter(CustomerID == 12346) %>% view()
summary(df)
ggplot(df, aes(x=Quantity)) +
geom_boxplot()
df %>% filter(Quantity <= 10000) %>% view()
ggplot(df, aes(x=Quantity)) +
geom_boxplot()
df %>% filter(Quantity <= 10000)
ggplot(df, aes(x=Quantity)) +
geom_boxplot()
df <- df %>% filter(Quantity <= 10000)
ggplot(df, aes(x=Quantity)) +
geom_boxplot()
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Recency = as.numeric(max_date - max(InvoiceDate)),
Frequency = n_distinct(InvoiceNo),
Monetary = sum(Total))
df <- read_excel("Output/Data/Cleaned Online Retail.xlsx")
df <- df %>% mutate(Total = Quantity*UnitPrice)
head(df)
summary(df)
# Defined the lastest Date
max_date <- max(df$InvoiceDate)
# Created RFM Table
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Recency = max_date - max(InvoiceDate),
Frequency = n_distinct(InvoiceNo),
Monetary = sum(Total))
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Frequency = n_distinct(InvoiceNo),
Monetary = sum(Total))
rfm_df
rfm_df <- df %>% group_by(CustomerID) %>% summarize(Frequency = n_distinct(InvoiceNo),
Monetary = sum(Total)) %>% arrange(desc(Monetary), desc(Frequency))
rfm_df
rfm_df <- rfm_df %>%
mutate(
#R_Score = ntile(-Recency, 5),   # ยิ่งน้อยวัน ยิ่งคะแนนสูง
F_Score = ntile(Frequency, 5),
M_Score = ntile(Monetary, 5),
RFM_Score = paste0(R_Score, F_Score, M_Score)
)
rfm_df <- rfm_df %>%
mutate(
F_Score = ntile(Frequency, 5),
M_Score = ntile(Monetary, 5),
RFM_Score = paste0(R_Score, F_Score, M_Score)
)
rfm_df <- rfm_df %>%
mutate(
F_Score = ntile(Frequency, 5),
M_Score = ntile(Monetary, 5),
RFM_Score = paste0(F_Score, M_Score)
)
rfm_df
View(rfm_df)
ggplot(rfm_df, aes(x = Frequency, y = Monetary)) +
geom_point(alpha = 0.7, size = 3) +
scale_color_gradient(low = "lightblue", high = "darkblue") +
theme_minimal() +
labs(title = "RFM Segmentation",
x = "Frequency",
y = "Monetary")
ggplot(rfm_df, aes(x = Frequency, y = Monetary)) +
geom_point() +
scale_color_gradient(low = "lightblue", high = "darkblue") +
theme_minimal() +
labs(title = "RFM Segmentation",
x = "Frequency",
y = "Monetary")
rfm_df
